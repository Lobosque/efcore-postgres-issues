// <auto-generated />
using ConcurrencyPoC;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace concurrency_check.Migrations.MysqlMigrations
{
    [DbContext(typeof(MysqlDbContext))]
    [Migration("20200306161809_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ConcurrencyPoC.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("blog_id")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsConcurrencyToken()
                        .HasColumnName("url")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("BlogId")
                        .HasName("pk_blogs");

                    b.ToTable("blogs");
                });

            modelBuilder.Entity("ConcurrencyPoC.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("post_id")
                        .HasColumnType("int");

                    b.Property<int>("BlogId")
                        .HasColumnName("blog_id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PostId")
                        .HasName("pk_posts");

                    b.HasIndex("BlogId")
                        .HasName("ix_posts_blog_id");

                    b.ToTable("posts");
                });

            modelBuilder.Entity("ConcurrencyPoC.Post", b =>
                {
                    b.HasOne("ConcurrencyPoC.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .HasConstraintName("fk_posts_blogs_blog_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
